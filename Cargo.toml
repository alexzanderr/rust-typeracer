# note that this is unstable in this version of cargo
# 1.65.0-nightly (4ed54cecc 2022-08-27)
cargo-features = ["profile-rustflags"]

[package]
name = "typeracer"
version = "0.0.1"
edition = "2021"
default-run = "typeracer"
authors = [ "alexzanderr <alexzander.dot.dev@gmail.com>" ]
exclude = [
    "python_version",
    # https://github.com/rust-lang/cargo/issues/3578
    "examples/*"
]

[[bin]]
name = "typeracer"
path = "src/main.rs"

[features]
music = []

[dependencies.core-dev]
git = "https://github.com/alexzanderr/rust-core-dev"
features = [
    "datetime",
    "traits",
    "terminal",
    "audio"
]

[dev-dependencies]
assert2 = { workspace = true }



# https://github.com/rust-lang/rust/blob/master/RELEASES.md#cargo
# https://doc.rust-lang.org/nightly/cargo/reference/workspaces.html#the-dependencies-table
[workspace.dependencies]
# the good part is that i have the same version of crossterm for the entire workspace
# and if i manually change the version here its propagated to the entire workspace
# instead of manually changing the version of crossterm for every member of the workspace
# cool
crossterm = "0.25.0"
assert2 = "0.3.6"
colored = "2.0.0"
dotenv = "0.15.0"
soloud = "1.0.2"
rand = "0.8.5"


[dependencies]
# builder design pattern: create a builder for your struct
derive_builder = "0.11.2"
# error management
thiserror = "1.0.37"

# string alignment
pad = "0.1.6"
# parse ansi codes from a string
ansi-parser = "0.8.0"
# random numbers
rand = { workspace = true }
# play music
soloud = { workspace = true }
# ansi + rgb colors
colored = { workspace = true }
# load env variables
dotenv = { workspace = true }
# better testing assertions
assert2 = { workspace = true }
# terminal manipulation library
crossterm = { workspace = true }
# getters and setters automatically created with derive
# but they are crap, honestly, you better write your own setters
getset = "0.1.2"
# global variables allocated at runtime
lazy_static = "1.4.0"
# unicode manipulation
# a unicode char can have between 1..4 bytes instead of 1 like a char
unicode-segmentation = "1.10.0"




[workspace]
members = [
    # the place where all new ideas and experimental examples are implemented
    "dev-ideas",
]
exclude = [
]


# Ultra performance specs
# NOTE: compilation is very long, but its worth it
[profile.release]
# https://github.com/johnthagen/min-sized-rust
# compilation takes longer here
lto = true
# compilation takes longer here too
codegen-units = 1
# optimize for speed
opt-level = 's'
# when it will panic, it will segfaults, why?
panic = "abort"
# its like strip all
strip = true  # Automatically strip symbols from the binary.
# for this you need cargo feature `cargo-features = ["profile-rustflags"]` at the top of Cargo.toml
rustflags = ["-C", "target-cpu=native"]

# learn more about that
# https://doc.rust-lang.org/cargo/reference/profiles.html#incremental
# incremental = false
